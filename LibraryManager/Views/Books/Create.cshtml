@model LibraryManager.DbContext.Models.Book
@inject LibraryManager.DbContext.LibraryContext dbContext

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Book</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ISBN" class="control-label"></label>
                <input asp-for="ISBN" class="form-control" />
                <span asp-validation-for="ISBN" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BookStatus" class="control-label"></label>
                @*<select asp-for="BookStatus" class="form-control"></select>*@
                
                @Html.DropDownListFor(model => model.CatalogueId, new SelectList(new[] { new { Id = 0, Name= "Borrowed" }, new { Id = 1, Name = "Available" } }, "Id", "Name"), new { @class = "form-control" })
                <span asp-validation-for="BookStatus" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CatalogueId" class="control-label"></label>
                @*<select asp-for="CatalogueId" class="form-control" asp-items="ViewBag.CatalogueId"></select>*@
                @{
                    var catalogueList = dbContext.Catalogues.ToList();
                }
                @Html.DropDownListFor(model => model.CatalogueId, new SelectList(catalogueList, "CatalogueId", "BookName"), new { @class = "form-control" })

            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
